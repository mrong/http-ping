#!/bin/bash

script_path=$(dirname $(realpath $0))
source "${script_path}/http-code-to-text.sh"

loop_iterations=0
sleep_time=1

while getopts "hi:s:" arg; do
    case ${arg} in
        h)
            show_usage=true
        ;;
        i)
            loop_iterations=${OPTARG}
        ;;
        s)
            sleep_time=${OPTARG}
        ;;
    esac
done

shift $((${OPTIND} - 1))

url="$1"

if [ -z "${url}" ] || [ ${show_usage} ]; then
    echo "Usage: $0 [options] <url>"
    echo ""
    echo "Options:"
    echo "  -i  Check the URL the given times"
    echo "  -s  Sleep the given time (see 'man sleep')"
    echo "  -h  Show this help message"
    exit
fi

url_regex="(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]"

if [[ $1 =~ ${url_regex} ]]; then
    url=$1
    echo -e "\n#\tStatus\tTime\t\tDescription"
    echo "-------------------------------------------------------------------------------"

    while [ true ]; do
        iteration=$((iteration + 1))
        status=$(curl -w "%{http_code} %{time_total}\n" -o /dev/null -s ${url})

        if [ "$?" != "0" ]; then
            break
        fi

        set - ${status}

        code=$1
        time=$2
        description=$(http_code_to_text ${code})

        echo -e "${iteration}\t${code}\t${time}\t${description}"

        if [ $loop_iterations -gt 0 ] && [ $iteration -eq $loop_iterations ]; then
            break
        fi

        sleep ${sleep_time}
    done
else
    echo "URL '${url}' is not a valid link"
fi
